plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java-library'

group = 'com.github.ispong'
version = '0.0.1'
//
//task sourcesJar(type: Jar) {
//    from sourceSets.main.allJava
//    classifier = 'sources'
//}
//
//task myJavadocs(type: Javadoc) {
////    from javadoc
////    options.encoding("UTF-8")
//    source = sourceSets.main.allJava
//}

//task javadocJar(type: Jar) {
//    from javadoc
//    classifier = 'javadoc'
//}

//java {
//    withJavadocJar()
//    withSourcesJar()
//}


description = 'Spring Oxygen Wechatgo'

dependencies {
    compile(project(':spring-oxygen-core'))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'oxygen-wechatgo'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    options.encoding("UTF-8")
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
